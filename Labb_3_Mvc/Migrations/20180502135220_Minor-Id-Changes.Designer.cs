// <auto-generated />
using Labb_3_Mvc.Cinema;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace Labb_3_Mvc.Migrations
{
    [DbContext(typeof(BerraContext))]
    [Migration("20180502135220_Minor-Id-Changes")]
    partial class MinorIdChanges
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Labb_3_Mvc.Cinema.Models.BookingTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BookingDate");

                    b.Property<int?>("MovieIdId");

                    b.Property<int?>("RoomIdId");

                    b.HasKey("Id");

                    b.HasIndex("MovieIdId");

                    b.HasIndex("RoomIdId");

                    b.ToTable("BookingTickets");
                });

            modelBuilder.Entity("Labb_3_Mvc.Cinema.Models.Conjunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("RoomIdId");

                    b.Property<string>("Status")
                        .HasColumnName("Status")
                        .HasMaxLength(32);

                    b.Property<int?>("TicketIdId");

                    b.HasKey("Id");

                    b.HasIndex("RoomIdId");

                    b.HasIndex("TicketIdId");

                    b.ToTable("Conjunction");
                });

            modelBuilder.Entity("Labb_3_Mvc.Cinema.Models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AgeRangeNr");

                    b.Property<string>("Genre")
                        .HasColumnName("Genre")
                        .HasMaxLength(32);

                    b.Property<string>("Imgurl")
                        .HasColumnName("ImgUrl")
                        .HasMaxLength(32);

                    b.Property<string>("Length")
                        .HasColumnName("Length")
                        .HasMaxLength(32);

                    b.Property<int>("SeatsNr");

                    b.Property<string>("Title")
                        .HasColumnName("Title")
                        .HasMaxLength(32);

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Labb_3_Mvc.Cinema.Models.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("MovieIdId");

                    b.HasKey("Id");

                    b.HasIndex("MovieIdId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Labb_3_Mvc.Cinema.Models.BookingTicket", b =>
                {
                    b.HasOne("Labb_3_Mvc.Cinema.Models.Movie", "MovieId")
                        .WithMany()
                        .HasForeignKey("MovieIdId");

                    b.HasOne("Labb_3_Mvc.Cinema.Models.Room", "RoomId")
                        .WithMany()
                        .HasForeignKey("RoomIdId");
                });

            modelBuilder.Entity("Labb_3_Mvc.Cinema.Models.Conjunction", b =>
                {
                    b.HasOne("Labb_3_Mvc.Cinema.Models.Room", "RoomId")
                        .WithMany()
                        .HasForeignKey("RoomIdId");

                    b.HasOne("Labb_3_Mvc.Cinema.Models.BookingTicket", "TicketId")
                        .WithMany()
                        .HasForeignKey("TicketIdId");
                });

            modelBuilder.Entity("Labb_3_Mvc.Cinema.Models.Room", b =>
                {
                    b.HasOne("Labb_3_Mvc.Cinema.Models.Movie", "MovieId")
                        .WithMany()
                        .HasForeignKey("MovieIdId");
                });
#pragma warning restore 612, 618
        }
    }
}
